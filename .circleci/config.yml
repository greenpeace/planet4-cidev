---
version: 2.1

parameters:
  release_init:
    type: boolean
    default: true
  production_hold:
    type: boolean
    default: false
  production_finish:
    type: boolean
    default: false

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:release-new

job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: cidev
    CONTAINER_PREFIX: planet4-cidev
    WP_DB_NAME_PREFIX: planet4-cidev_wordpress
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: planet4-cidev
    NEWRELIC_APPNAME: P4 cidev Development
    WP_DB_NAME: planet4-cidev_wordpress_develop
    WP_STATELESS_BUCKET: planet4-cidev-stateless-develop
  release_environment: &release_environment
    APP_ENVIRONMENT: staging
    APP_HOSTNAME: release.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: cidev
    HELM_RELEASE: planet4-cidev-release
    NEWRELIC_APPNAME: P4 cidev Release
    WP_DB_NAME: planet4-cidev_wordpress_release
    WP_STATELESS_BUCKET: planet4-cidev-stateless-release
  production_environment: &production_environment
    APP_HOSTNAME: master.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: cidev
    HELM_RELEASE: planet4-cidev-master
    NEWRELIC_APPNAME: P4 cidev Production
    WP_DB_NAME: planet4-cidev_wordpress_master
    WP_STATELESS_BUCKET: planet4-cidev-stateless

job_definitions:
  visualtests_reference_steps: &visualtests_reference_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:release-new
    working_directory: /src
    steps:
      - run: ./checkout.sh
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - run: ./makehistory.sh
      - store_artifacts:
          path: /app/backstop_data
      - persist_to_workspace:
          root: /app
          paths:
            - backstop_data

  visualtests_compare_steps: &visualtests_compare_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:release-new
    working_directory: /src
    steps:
      - run: ./checkout.sh
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - attach_workspace:
          at: /app
      - run: ./makecomparison.sh
      - store_artifacts:
          path: /app/backstop_data

  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
            - composer-v5-{{ .Branch }}-{{ .Revision }}
            - composer-v5-{{ .Branch }}
            - composer-v5
      - run: |
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: mkdir -p /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - save_cache:
          key: composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test_steps: &test_steps
    working_directory: ~/project
    docker:
      - image: gcr.io/planet-4-151612/p4-codeception:build-12
      - name: selenium
        image: selenium/standalone-chrome-debug:3.141.59-oxygen
    steps:
      - checkout
      - run: if [ ! -d "tests" ] || [ ! "$(ls -A tests)" ]; then circleci-agent step halt; fi
      - run: dockerize -wait tcp://selenium:4444
      - run: codeceptionify.sh .
      - run: codecept run --xml=junit.xml --html
      - run:
          name: Copy test artifacts
          when: always
          command: |
            mkdir -p /tmp/artifacts
            cp -r codeception/_output/. /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  deploy_steps: &deploy_steps
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make -j2 deploy

jobs:
  visualtests-reference-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_reference_steps

  visualtests-reference:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *visualtests_reference_steps

  visualtests-compare-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_compare_steps

  visualtests-compare:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *visualtests_compare_steps

  build-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  build-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *build_steps

  build-production:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *build_steps

  test-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *test_steps

  test-release:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *test_steps

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

  deploy-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *deploy_steps

  deploy-production:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *deploy_steps

  create-sync-sql:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_create_sync_file.sh

  sync-to-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh release

  sync-to-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh develop

  backup:
    docker:
      - image: greenpeaceinternational/planet4-backup:latest
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /app
    steps:
      - run: echo "backup is running"
      - run: pwd
      - run: ls
      - run: ./go.sh

workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: develop
  release_common: &release_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/
  production_common: &production_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/

workflows:
  develop:
    jobs:
      - visualtests-reference-develop:
          <<: *develop_common
      - build-develop:
          <<: *develop_common
      - deploy-develop:
          <<: *develop_common
          requires:
            - build-develop
            - visualtests-reference-develop
      - test-develop:
          <<: *develop_common
          requires:
            - deploy-develop
      - visualtests-compare-develop:
          <<: *develop_common
          requires:
            - deploy-develop

  release:
    when: << pipeline.parameters.release_init >>
    jobs:
      - visualtests-reference:
          <<: *release_common
      - build-release:
          <<: *release_common
      - deploy-release:
          <<: *release_common
          requires:
            - build-release
            - visualtests-reference
      - test-release:
          <<: *release_common
          requires:
            - deploy-release
      - visualtests-compare:
          <<: *release_common
          requires:
            - test-release

  production-hold:
    when: << pipeline.parameters.production_hold >>
    jobs:
      - hold-release:
          <<: *production_common
          type: approval
      - build-production:
          <<: *production_common
          requires: 
            - hold-release
      - deploy-production:
          <<: *production_common
          requires:
            - build-production

  production:
    when: << pipeline.parameters.production_finish >>
    jobs:
      - build-production:
          <<: *production_common
      - deploy-production:
          <<: *production_common
          requires:
            - build-production

  sync-from-production:
    triggers:
      - schedule:
          cron: "10 01 1 * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - create-sync-sql:
          context: org-global
      - sync-to-release:
          context: org-global
          requires:
            - create-sync-sql
      - sync-to-develop:
          context: org-global
          requires:
            - create-sync-sql

  backup:
    triggers:
      - schedule:
          cron: "30 02 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - backup:
          context: org-global
